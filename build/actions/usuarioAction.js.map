{"version":3,"sources":["../../src/actions/usuarioAction.js"],"names":["Date","prototype","addDays","days","date","valueOf","setDate","getDate","createToken","userData","exp","getTime","payload","_id","email","nombre","token","jwt","sign","SECRET","createUsuario","usuarioModel","create","newUser","getUsuario","filtro","find","populate","doLoginAction","password","findOne","user","bcrypt","compareSync","updateUsuario","update","findOneAndUpdate","deleteUsuario","findOneAndDelete","findUserAction","filter"],"mappings":"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","sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport bcrypt from 'bcrypt';\r\n\r\nimport { usuarioModel } from '../database/models';\r\nimport { SECRET } from '../config/index';\r\n\r\nDate.prototype.addDays = function (days) {\r\n  const date = new Date(this.valueOf());\r\n  date.setDate(date.getDate() + days);\r\n  return date;\r\n}\r\n\r\nconst createToken = (userData) => {\r\n  const exp = new Date().addDays(5).getTime();\r\n  const payload = {\r\n    _id: userData._id,\r\n    email: userData.email,\r\n    nombre: userData.nombre,\r\n    exp,\r\n  }\r\n\r\n  const token = jwt.sign(payload, SECRET);\r\n  return { token }\r\n}\r\n\r\n\r\nexport const createUsuario = async (userData) => {\r\n  try {\r\n    const newUser = await usuarioModel.create(userData);\r\n    const token = createToken(newUser);\r\n    return token;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n\r\nexport const getUsuario = async (filtro) => {\r\n  try {\r\n    return await usuarioModel.find(filtro).populate('pedidos');\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n\r\nexport const doLoginAction = async (email, password) => {\r\n  try {\r\n    const user = await usuarioModel.findOne({ email });\r\n    if (!user || !bcrypt.compareSync(password, user.password)) { return null }\r\n    return createToken(user);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n\r\nexport const updateUsuario = async (filtro, update) => {\r\n  try {\r\n    return await usuarioModel.findOneAndUpdate(filtro, update, { new: true });\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n\r\nexport const deleteUsuario = async (filtro) => {\r\n  try {\r\n    return await usuarioModel.findOneAndDelete(filtro);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n\r\nexport const findUserAction = async (filter) => {\r\n  try {\r\n    return await usuarioModel.findOne(filter);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n"],"file":"usuarioAction.js"}