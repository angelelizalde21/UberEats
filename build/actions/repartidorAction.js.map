{"version":3,"sources":["../../src/actions/repartidorAction.js"],"names":["createRepartidor","repartidorData","repartidoreModel","create","getRepartidor","filtro","find","populate","repartidores","calificacionRepartidor","updateRepartidor","update","findOneAndUpdate","deleteRepartidor","findOneAndDelete","rep","retorno","forEach","item","totalEstrellas","calificaciones","calificacion","totalCalificaciones","length","estrellas","push","setRepartidorPedido","data","random","Math","floor","repartidor","_id","$push","$set","estatus"],"mappings":"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","sourcesContent":["import { repartidoreModel } from '../database/models';\r\nimport { updatePedido, getPedido } from '../actions/pedidoAction';\r\n\r\nexport const createRepartidor = async (repartidorData) => {\r\n  try {\r\n    return await repartidoreModel.create(repartidorData);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n\r\nexport const getRepartidor = async (filtro) => {\r\n  try {\r\n    const repartidores = await repartidoreModel.find(filtro).populate('pedidos').populate('calificaciones');\r\n    return  await calificacionRepartidor(repartidores);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n\r\nexport const updateRepartidor = async (filtro, update) => {\r\n  try {\r\n    return await repartidoreModel.findOneAndUpdate(filtro, update, { new: true });\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n\r\nexport const deleteRepartidor = async (filtro) => {\r\n  try {\r\n    return await repartidoreModel.findOneAndDelete(filtro);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n\r\nconst calificacionRepartidor = async (rep) => {\r\n  const retorno = []\r\n  rep.forEach(item => {\r\n    let totalEstrellas = 0\r\n    item.calificaciones.forEach(calificacion => {\r\n      totalEstrellas += calificacion.calificacion\r\n    })\r\n    const totalCalificaciones = item.calificaciones.length === 0 ? 1 : item.calificaciones.length\r\n    item.estrellas = totalEstrellas / totalCalificaciones\r\n    retorno.push(item);\r\n  })\r\n  return retorno;\r\n}\r\n\r\nexport const setRepartidorPedido = async (filtro) => {\r\n  try {\r\n    // Obtiene datos del pedido\r\n    const data = await getPedido(filtro);\r\n\r\n    // Seleccionar repartidor al asar\r\n    const repartidores = await getRepartidor();\r\n    var random = Math.floor(Math.random() * (+(repartidores.length - 1) - +0)) + +0;\r\n    const repartidor = repartidores[random];\r\n    // Agregar pedido a repartidor\r\n    await updateRepartidor({ _id: repartidor._id }, { $push: { 'pedidos': filtro._id } })\r\n\r\n    // Promedio de calificacion\r\n    let totalEstrellas = 0\r\n    repartidor.calificaciones.forEach(calificacion => {\r\n      totalEstrellas += calificacion.calificacion\r\n    })\r\n    const totalCalificaciones = repartidor.calificaciones.length === 0 ? 1 : repartidor.calificaciones.length\r\n    repartidor.estrellas = totalEstrellas / totalCalificaciones\r\n\r\n    const update = { $set: { ...data, estatus: 'RECOGIDO', repartidor: repartidor._id } };\r\n    await updatePedido(filtro, update);\r\n    return repartidor;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}"],"file":"repartidorAction.js"}