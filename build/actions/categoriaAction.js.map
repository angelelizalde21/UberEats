{"version":3,"sources":["../../src/actions/categoriaAction.js"],"names":["createCategoria","categoriaData","categoriaModel","create","getCategoria","filtro","find","populate","updateCategoria","update","findOneAndUpdate","deleteCategoria","findOneAndDelete"],"mappings":";;;;;;;;;;;;;AAAA;;AAEO,IAAMA,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,iBAAOC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEdC,uBAAeC,MAAf,CAAsBF,aAAtB,CAFc;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfD,eAAe;AAAA;AAAA;AAAA,GAArB;;;;AAQA,IAAMI,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,kBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEXH,uBAAeI,IAAf,CAAoBD,MAApB,EAA4BE,QAA5B,CAAqC,WAArC,CAFW;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZH,YAAY;AAAA;AAAA;AAAA,GAAlB;;;;AASA,IAAMI,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,kBAAOH,MAAP,EAAeI,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEdP,uBAAeQ,gBAAf,CAAgCL,MAAhC,EAAwCI,MAAxC,EAAgD;AAAE,qBAAK;AAAP,aAAhD,CAFc;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfD,eAAe;AAAA;AAAA;AAAA,GAArB;;;;AAQA,IAAMG,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,kBAAON,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEdH,uBAAeU,gBAAf,CAAgCP,MAAhC,CAFc;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfM,eAAe;AAAA;AAAA;AAAA,GAArB","sourcesContent":["import { categoriaModel } from '../database/models';\r\n\r\nexport const createCategoria = async (categoriaData) => {\r\n  try {\r\n    return await categoriaModel.create(categoriaData);\r\n  } catch (error) {\r\n    return  error;\r\n  }\r\n} \r\n\r\nexport const getCategoria = async (filtro) => {\r\n  try {\r\n    return await categoriaModel.find(filtro).populate('platillos');\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n\r\n\r\nexport const updateCategoria = async (filtro, update) => {\r\n  try {\r\n    return await categoriaModel.findOneAndUpdate(filtro, update, { new: true });\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n\r\nexport const deleteCategoria = async (filtro) => {\r\n  try {\r\n    return await categoriaModel.findOneAndDelete(filtro);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}"],"file":"categoriaAction.js"}