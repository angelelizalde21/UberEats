{"version":3,"sources":["../../src/actions/authActions.js"],"names":["JWT","require","SchemaDirectiveVisitor","AuthenticationError","AuthDirective","field","resolve","defaultFieldResolver","args","ctx","user","apply","getContext","req","token","headers","authorization","undefined","verify","SECRET","err","result","_id","e"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAKA;;;;;;AANA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;eAKwDA,OAAO,CAAC,uBAAD,C;IAAvDC,sB,YAAAA,sB;IAAwBC,mB,YAAAA,mB;;IAG1BC,a;;;;;;;;;;;;yCACiBC,K,EAAO;AAAA,2BACiBA,KADjB,CAClBC,OADkB;AAAA,UAClBA,OADkB,+BACRC,oBADQ;AAE1BF,MAAAA,KAAK,CAACC,OAAN;AAAA;AAAA;AAAA;AAAA,mCAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAmBE,IAAnB;AAAmBA,kBAAAA,IAAnB;AAAA;;AACRC,gBAAAA,GADQ,GACFD,IAAI,CAAC,CAAD,CADF;;AAAA,qBAEVC,GAAG,CAACC,IAFM;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAGCJ,OAAO,CAACK,KAAR,CAAc,IAAd,EAAoBH,IAApB,CAHD;;AAAA;AAAA;;AAAA;AAAA,sBAKN,IAAIL,mBAAJ,CAAwB,2BAAxB,CALM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAhB;AAQD;;;EAXyBD,sB;;;;AAc5B,IAAMU,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAS;AAC1B,MAAI;AACF,QAAMC,KAAK,GAAGD,GAAG,CAACE,OAAJ,CAAYC,aAA1B;AACA,QAAI,yBAAOF,KAAP,cAAwBG,SAAxB,0DAAwBA,SAAxB,EAAJ,EAAuC,OAAOJ,GAAP;AACvC,WAAOb,GAAG,CAACkB,MAAJ,CAAWJ,KAAX,EAAkBK,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA0B,kBAAgBC,GAAhB,EAAqBC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAC3BD,GAD2B;AAAA;AAAA;AAAA;;AAAA,kDACfP,GADe;;AAAA;AAAA;AAAA;AAAA,uBAGV,mCAAe;AAAES,kBAAAA,GAAG,EAAED,MAAM,CAACC;AAAd,iBAAf,CAHU;;AAAA;AAGvBZ,gBAAAA,IAHuB;AAAA,oEAIjBG,GAJiB;AAIZH,kBAAAA,IAAI,EAAJA;AAJY;;AAAA;AAAA;AAAA;AAAA,kDAMtBG,GANsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA1B;;AAAA;AAAA;AAAA;AAAA,QAAP;AASD,GAZD,CAYE,OAAOU,CAAP,EAAU;AACV,WAAOV,GAAP;AACD;AACF,CAhBD","sourcesContent":["const JWT = require('jsonwebtoken');\r\nimport {\r\n  findUserAction\r\n} from '../actions/usuarioAction';\r\n\r\nconst { SchemaDirectiveVisitor, AuthenticationError } = require('apollo-server-express');\r\nimport { SECRET } from '../config/index';\r\n\r\nclass AuthDirective extends SchemaDirectiveVisitor {\r\n  visitFieldDefinition(field) {\r\n    const { resolve = defaultFieldResolver } = field;\r\n    field.resolve = async function (...args) {\r\n      const ctx = args[2];\r\n      if (ctx.user) {\r\n        return await resolve.apply(this, args);\r\n      } else {\r\n        throw new AuthenticationError(\"You need to be logged in.\");\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\nconst getContext = (req) => {\r\n  try {\r\n    const token = req.headers.authorization;\r\n    if (typeof token === typeof undefined) return req;\r\n    return JWT.verify(token, SECRET, async function (err, result) {\r\n      if (err) return req;\r\n      try {\r\n        const user = await findUserAction({ _id: result._id });\r\n        return { ...req, user };\r\n      } catch (error) {\r\n        return req;\r\n      }\r\n    });\r\n  } catch (e) {\r\n    return req;\r\n  }\r\n}\r\n\r\nexport {\r\n  getContext,\r\n  AuthDirective,\r\n}"],"file":"authActions.js"}