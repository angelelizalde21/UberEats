"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _apolloServer = require("apollo-server");

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  directive @AuthDirective on QUERY | FIELD_DEFINITION | FIELD\n\n  type Token {\n    token: String\n  }\n \n  type Usuario {\n    _id: ID\n    nombre: String\n    email: String\n    password: String\n    genero: Gender\n    avatar: String\n    pedidos: [Pedido]\n  }\n\n  type Repartidor {\n    _id: ID\n    nombre: String\n    email: String\n    password: String\n    genero: Gender\n    avatar: String\n    estrellas: Int\n    pedidos: [Pedido]\n  }\n\n  type Restaurante {\n    _id: ID\n    nombre: String\n    direccion: String\n    avatar: String\n    tiempoEspera: String\n    platillos: [Platillo]\n  }\n\n  type Categoria {\n    _id: ID\n    nombre: String\n    imagen: String\n    platillos: [Platillo]\n  }\n\n  type Platillo {\n    _id: ID\n    restaurante: Restaurante\n    nombre: String\n    descripcion: String\n    imagen: String\n    precio: String\n    categoria: Categoria\n  }\n\n  type Pedido {\n    _id: ID\n    usuario: Usuario\n    repartidor: Repartidor\n    total: Float\n    estatus: String\n    metodoPago: String\n    detalle: [Detalle]\n  }\n\n  type Detalle {\n    restaurante: Restaurante\n    platillo: Platillo\n    cantidad: Int\n  }\n\n  type Calificacion {\n    _id: ID\n     repartidor: Repartidor\n     usuario: Usuario\n     comentario: String\n     calificacion: Int\n  }\n\n  type Buzon {\n    _id: ID\n    usuario: Usuario\n    detalle: [Detalle]\n  }\n\n  input UsuarioInput {\n    nombre: String!\n    email: String!\n    password: String!\n    genero: Gender\n    avatar: Upload\n  }\n\n  input RepartidorInput {\n    nombre: String!\n    email: String!\n    password: String!\n    genero: Gender\n    avatar: Upload\n  }\n\n  input RestauranteInput {\n    nombre: String!\n    direccion: String!\n    avatar: Upload\n    tiempoEspera: String!\n  }\n\n  input CategoriaInput {\n    nombre: String!\n    imagen: Upload\n  }\n\n  input PlatilloInput {\n    restaurante: ID!\n    nombre: String!\n    descripcion: String!\n    imagen: Upload\n    precio: Float!\n    categoria: ID!\n  }\n\n  input PedidoInput {\n    usuario: ID!\n    repartidor: ID\n    total: Float!\n    estatus: Estatus!\n    detalle: [DetalleInput]!\n  } \n\n  input PedidoBuscarInput {\n    usuario: ID!\n    repartidor: ID\n    total: Float\n    estatus: Estatus\n  } \n\n  input DetalleInput {\n    restaurante: ID!\n    platillo: ID!\n    cantidad: Float!\n  }\n\n  input CalificacionInput {\n    repartidor: ID\n    usuario: ID\n    comentario: String!\n    calificacion: Int\n  }\n\n  input BuzonInput {\n    usuario: ID\n    detalle: [DetalleInput]\n  }\n\n  input BuzonUpdateInput {\n    _id: ID\n    usuario: ID\n    detalle: [DetalleInput]\n  }\n\n  enum Gender {\n    HOMBRE\n    MUJER\n  }\n\n  enum Estatus {\n    PEDIDO\n    RECOGIDO\n    ENTREGADO\n  }\n\n  type Subscription {\n    buzonAdded: Buzon\n  }  \n\n  type Query {\n    getUsuario(data: UsuarioInput): [Usuario] @AuthDirective\n    getRepartidor(data: RepartidorInput): [Repartidor] @AuthDirective\n    getRestaurante(data: RestauranteInput): [Restaurante] @AuthDirective\n    getCategoria(data: CategoriaInput): [Categoria] @AuthDirective\n    getPlatillo(data: PlatilloInput): [Platillo] @AuthDirective\n    getPedido(data: PedidoBuscarInput): [Pedido] @AuthDirective\n    getBuzon(data: BuzonInput) : [Buzon] @AuthDirective\n    getLoginUser : Usuario @AuthDirective\n  }\n\n\n  type Mutation {\n    doLogin(email: String, password: String) : Token\n    addUsuario(data: UsuarioInput) : Token \n    updateUsuario(data: UsuarioInput, usuarioID: ID) : Usuario @AuthDirective\n    deleteUsuario(usuarioID: ID) : Usuario @AuthDirective\n    addRepartidor(data: RepartidorInput) : Repartidor @AuthDirective\n    updateRepartidor(data: RepartidorInput, repartidorID: ID) : Repartidor @AuthDirective\n    deleteRepartidor(repartidorID: ID) : Repartidor @AuthDirective\n    addRestaurante(data: RestauranteInput) : Restaurante @AuthDirective\n    updateRestaurante(data: RestauranteInput, restauranteID: ID) : Restaurante @AuthDirective\n    deleteRestaurante(restauranteID: ID) : Restaurante @AuthDirective\n    addCategoria(data: CategoriaInput) : Categoria @AuthDirective\n    updateCategoria(data: CategoriaInput, categoriaID: ID) : Categoria @AuthDirective\n    deleteCategoria(categoriaID: ID) : Categoria @AuthDirective\n    addPlatillo(data: PlatilloInput) : Platillo @AuthDirective\n    updatePlatillo(data: PlatilloInput, platilloID: ID) : Platillo @AuthDirective\n    deletePlatillo(platilloID: ID) : Platillo @AuthDirective\n    addPedido(data: PedidoInput) : Pedido @AuthDirective\n    updatePedido(data: PedidoInput, pedidoID: ID) : Pedido @AuthDirective\n    deletePedido(pedidoID: ID) : Pedido @AuthDirective\n    setRepartidorPedido(pedidoID: ID) : Repartidor @AuthDirective\n    setEntregarPedido(pedidoID: ID) : Pedido @AuthDirective\n    setCalificacion(data: CalificacionInput) : Calificacion @AuthDirective\n    addBuzon(data: BuzonInput) : Buzon @AuthDirective\n    updateBuzon(data: BuzonUpdateInput) : Buzon @AuthDirective\n    deleteBuzon(usuarioID: ID) : Buzon @AuthDirective\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var typeDefs = (0, _apolloServer.gql)(_templateObject());
var _default = typeDefs;
exports["default"] = _default;
//# sourceMappingURL=schemas.js.map