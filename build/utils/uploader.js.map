{"version":3,"sources":["../../src/utils/uploader.js"],"names":["storeUpload","stream","cloudinary","config","cloud_name","CLOUD_NAME","api_key","API_KEY","api_secret","API_SECRET","Promise","resolve","reject","buffer","v2","uploader","upload_stream","err","result","pipe"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEO,SAASA,WAAT,CAAqBC,MAArB,EAA6B;AAClCC,yBAAWC,MAAX,CAAkB;AAChBC,IAAAA,UAAU,EAAEC,iBADI;AAEhBC,IAAAA,OAAO,EAAEC,cAFO;AAGhBC,IAAAA,UAAU,EAAEC;AAHI,GAAlB;;AAMA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,MAAM,GAAGX,uBAAWY,EAAX,CAAcC,QAAd,CAAuBC,aAAvB,CAAqC,UAACC,GAAD,EAAMC,MAAN,EAAiB;AACnE,UAAID,GAAJ,EAASL,MAAM,CAACK,GAAD,CAAN;AACTN,MAAAA,OAAO,CAACO,MAAD,CAAP;AACD,KAHc,CAAf;;AAIAjB,IAAAA,MAAM,CAACkB,IAAP,CAAYN,MAAZ;AACD,GANM,CAAP;AAOD","sourcesContent":["import cloudinary from 'cloudinary';\r\n\r\nimport { CLOUD_NAME, API_KEY, API_SECRET } from '../config/index';\r\n\r\nexport function storeUpload(stream) {\r\n  cloudinary.config({\r\n    cloud_name: CLOUD_NAME,\r\n    api_key: API_KEY,\r\n    api_secret: API_SECRET,\r\n  });\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const buffer = cloudinary.v2.uploader.upload_stream((err, result) => {\r\n      if (err) reject(err);\r\n      resolve(result);\r\n    });\r\n    stream.pipe(buffer);\r\n  });\r\n}"],"file":"uploader.js"}