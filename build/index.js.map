{"version":3,"sources":["../src/index.js"],"names":["require","ApolloServer","mongoose","connect","DATABASE","useCreateIndex","useNewUrlParser","useFindAndModify","mongoDB","connection","on","console","error","bind","log","server","typeDefs","resolvers","schemaDirectives","AuthDirective","context","req","introspection","playground","listen","process","env","PORT","then","url"],"mappings":";;;;;;;;AACA;;AAEA;;AACA;;AACA;;AAEA;;eAPyBA,OAAO,CAAC,eAAD,C;IAAxBC,Y,YAAAA,Y;;AASR;AAEAC,qBAASC,OAAT,CACEC,eADF,EAEE;AACEC,EAAAA,cAAc,EAAE,IADlB;AAEEC,EAAAA,eAAe,EAAE,IAFnB;AAGEC,EAAAA,gBAAgB,EAAE;AAHpB,CAFF;;AASA,IAAMC,OAAO,GAAGN,qBAASO,UAAzB;AAEAD,OAAO,CAACE,EAAR,CAAW,OAAX,EAAoBC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,mBAA5B,CAApB;AACAH,OAAO,CAACE,EAAR,CAAW,MAAX,EAAmB;AAAA,SAAMC,OAAO,CAACG,GAAR,CAAY,iBAAZ,CAAN;AAAA,CAAnB,E,CAIA;;AAEA,IAAMC,MAAM,GAAG,IAAId,YAAJ,CAAiB;AAC9Be,EAAAA,QAAQ,EAARA,mBAD8B;AAE9BC,EAAAA,SAAS,EAATA,qBAF8B;AAG9BC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,aAAa,EAAEA;AADC,GAHY;AAM9BC,EAAAA,OAAO;AAAA;AAAA;AAAA,iCAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,cAAAA,GAAT,QAASA,GAAT;AAAA,gDAAmB,6BAAWA,GAAX,CAAnB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KANuB;AAO9BC,EAAAA,aAAa,EAAE,IAPe;AAQ9BC,EAAAA,UAAU,EAAE;AARkB,CAAjB,CAAf;AAWAR,MAAM,CAACS,MAAP,CAAcC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAlC,EAAwCC,IAAxC,CAA6C,iBAAa;AAAA,MAAVC,GAAU,SAAVA,GAAU;AACxDlB,EAAAA,OAAO,CAACG,GAAR,CAAY,2BAA2Be,GAAvC;AACD,CAFD","sourcesContent":["const { ApolloServer } = require('apollo-server');\r\nimport mongoose from 'mongoose';\r\n\r\nimport typeDefs from './graphql/schemas';\r\nimport resolvers from './graphql/resolvers';\r\nimport { getContext, AuthDirective } from './actions/authActions';\r\n\r\nimport { DATABASE } from './config/index';\r\n\r\n// Mongoose\r\n\r\nmongoose.connect(\r\n  DATABASE,\r\n  {\r\n    useCreateIndex: true,\r\n    useNewUrlParser: true,\r\n    useFindAndModify: false\r\n  }\r\n);\r\n\r\nconst mongoDB = mongoose.connection;\r\n\r\nmongoDB.on('error', console.error.bind(console, 'Error de conexion'));\r\nmongoDB.on('open', () => console.log('BD conectada !!'));\r\n\r\n\r\n\r\n// GraphQL\r\n\r\nconst server = new ApolloServer({\r\n  typeDefs,\r\n  resolvers,\r\n  schemaDirectives: {\r\n    AuthDirective: AuthDirective\r\n  },\r\n  context: async ({ req }) => getContext(req),\r\n  introspection: true,\r\n  playground: true,\r\n});\r\n\r\nserver.listen(process.env.PORT || 8080).then(({ url }) => {\r\n  console.log('ğŸš€ server is ready at ' + url);\r\n})"],"file":"index.js"}